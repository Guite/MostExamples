application AutoExchange {
	vendor Guite
	author "Axel Guckelsberger"
	email "info@guite.de"
	url "https://guite.de"
	prefix auex
	modelPath ""
	modelLayer {
		modelContainer Model {
			entities {
				entity provider leading {
					nameMultiple providers
					outgoing ( "provider.products",
					"provider.contracts" ) fields {
						string firstName {
							defaultValue ""
							length 100
						},
						string lastName leading {
							defaultValue ""
							length 100
						},
						string street {
							defaultValue ""
							mandatory false
							length 150
						},
						string houseNr {
							defaultValue "1"
							mandatory false
							length 10
						},
						string zipCode {
							defaultValue ""
							length 10
						},
						string city {
							defaultValue ""
							length 150
						}
					}
					indexes {
						index myIndex {
							items {
								indexItem firstName,
								indexItem lastName,
								indexItem zipCode
							}
						}
					}
				},
				entity product {
					nameMultiple products
					incoming ( "provider.products" ) outgoing ( "product.bidding",
					"product.views" ) fields {
						string title leading {
							defaultValue ""
							length 200
						},
						text description {
							defaultValue ""
						},
						date ^startDate {
							defaultValue ""
						},
						date ^endDate {
							defaultValue ""
						}
					}
				},
				entity bidding {
					nameMultiple biddings
					incoming ( "product.bidding",
					"bidder.biddings",
					"acceptance.bidding" ) fields {
						float price leading {
							defaultValue ""
						}
					}
				},
				entity acceptance {
					nameMultiple acceptance
					outgoing ( "acceptance.contract",
					"acceptance.bidding",
					"acceptance.customer" ) fields {
						date acceptDate leading {
							defaultValue ""
						}
					}
				},
				entity interestedBuyer {
					nameMultiple interestedBuyers
					incoming ( "inheritance.1" ) outgoing ( "buyer.views" ) fields {
						user buyer leading
					}
				},
				entity bidder {
					nameMultiple bidders
					incoming ( "inheritance.0" ) outgoing ( "bidder.biddings",
					"inheritance.1" ) fields {
						string firstName {
							defaultValue ""
							mandatory false
						},
						string lastName leading {
							defaultValue ""
						},
						boolean isRegular {
							defaultValue ^false
						}
					}
				},
				entity customer {
					nameMultiple customers
					incoming ( "acceptance.customer" ) outgoing ( "customer.contract",
					"inheritance.0" ) fields {
						integer customerNr leading unique {
							defaultValue "0"
						}
					}
				},
				entity contract {
					nameMultiple contracts
					incoming ( "provider.contracts",
					"customer.contract",
					"acceptance.contract" ) fields {
						string payMethod leading {
							defaultValue "credit card"
							length 20
						}
					}
				},
				entity productView {
					nameMultiple productView
					incoming ( "buyer.views",
					"product.views" ) fields {
						datetime viewTime leading {
							defaultValue ""
						}
					}
				}
			}
			relations {
				one2many bidirectional {
					source provider
					sourceAlias provider
					target product
					targetAlias products
				},
				one2one bidirectional {
					source product
					sourceAlias product
					target bidding
					targetAlias bidding
				},
				one2one bidirectional {
					source provider
					sourceAlias provider
					target contract
					targetAlias contracts
				},
				one2one bidirectional {
					source customer
					sourceAlias customer
					target contract
					targetAlias contract
				},
				one2many bidirectional {
					source interestedBuyer
					sourceAlias buyer
					target productView
					targetAlias ^views
				},
				one2many bidirectional {
					source product
					sourceAlias product
					target productView
					targetAlias ^views
				},
				one2many bidirectional {
					source bidder
					sourceAlias bidder
					target bidding
					targetAlias biddings
				},
				one2one bidirectional {
					source acceptance
					sourceAlias acceptance
					target contract
					targetAlias contract
				},
				one2one bidirectional {
					source acceptance
					sourceAlias acceptance
					target bidding
					targetAlias bidding
				},
				one2one bidirectional {
					source acceptance
					sourceAlias acceptance
					target customer
					targetAlias customer
				},
				inheritance bidirectional {
					source customer
					target bidder
				},
				inheritance bidirectional {
					source bidder
					target interestedBuyer
				}
			}
			variables {
				varContainer Variables {
					vars {
						intVar pageSize {
							value "15"
						},
						listVar defaultCat {
							items {
								listVarItem cat1,
								listVarItem cat1
							}
						}
					}
				}
			}
		}
	}
	controllerLayer {
		controllerContainer Controller {
			modelContext ( "AutoExchange.Model" )
			processViews "AutoExchange.View"
			controllers {
				ajaxController Ajax {
					actions {
						customAction MyFunction
					}
				},
				adminController Admin {
					actions {
						mainAction Main,
						viewAction View,
						displayAction Display,
						editAction Edit
					}
				},
				customController dsffdfsg {
					actions {
						customAction MyFunction
					}
				}
			}
			handlers {
				customHandler productHandler {
					events {
						normalEvent MyNameEvent,
						startEvent StartEvent
					}
				}
			}
		}
	}
	viewLayer {
		viewContainer View {
			controller "AutoExchange.Controller"
		}
	}
}