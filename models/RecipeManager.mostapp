application RecipeManager {
	documentation "Comprehensive recipe and menu management."
	vendor Guite
	author "Axel Guckelsberger"
	email "info@guite.de"
	url "http://modulestudio.de"
	prefix recman
	modelPath ""
	modelLayer {
		modelContainer Model {
			numExampleRows 0
			entities {
				entity recipe leading {
					nameMultiple recipes
					incoming ( "categories.recipes" ) outgoing ( "recipe.ingredients",
					"recipes.producedIngredient" ) fields {
						string title leading unique {
							defaultValue ""
							sluggablePosition 1
						},
						text description {
							defaultValue ""
							mandatory false
						},
						integer amountOfPortions {
							defaultValue "4"
							length 3
							minValue 1
							maxValue 50
						},
						list difficulty {
							items {
								listItem Easy ( easy ),
								default listItem Medium ( medium ),
								listItem Hard ( hard )
							}
						},
						integer duration {
							documentation "The duration in minutes."
							defaultValue "0"
						},
						text instructions {
							defaultValue ""
						},
						upload downloadFile {
							mandatory false
							allowedExtensions "gif, jpeg, jpg, png, pdf"
						},
						upload ^image {
							mandatory false
						}
					}
					indexes {
						index difficultyIndex {
							items {
								indexItem difficulty
							}
						}
					}
				},
				entity ingredient {
					nameMultiple ingredients
					tree NESTED
					incoming ( "categories.ingredients",
					"recipes.producedIngredient" ) outgoing ( "ingredient.recipes",
					"ingredients.units" ) fields {
						string name leading {
							defaultValue ""
							sluggablePosition 1
						},
						string originalName {
							defaultValue ""
							mandatory false
						},
						text description nullable {
							defaultValue ""
							mandatory false
						},
						string aliasName1 {
							defaultValue ""
							mandatory false
						},
						string aliasName2 {
							defaultValue ""
							mandatory false
						},
						string aliasName3 {
							defaultValue ""
							mandatory false
						},
						upload ^image {
							mandatory false
						},
						list saison multiple useChecks {
							mandatory false
							items {
								listItem January ( january ) {
									image ""
								},
								listItem February ( february ),
								listItem March ( march ),
								listItem April ( april ),
								listItem May ( may ),
								listItem June ( june ),
								listItem July ( july ),
								listItem August ( august ),
								listItem September ( september ),
								listItem October ( october ),
								listItem November ( november ),
								listItem December ( december )
							}
						}
					}
				},
				entity category {
					nameMultiple categories
					tree NESTED
					outgoing ( "categories.ingredients",
					"categories.recipes" ) fields {
						string name leading {
							defaultValue ""
							sluggablePosition 1
						},
						upload ^image {
							mandatory false
						}
					}
				},
				entity unit {
					nameMultiple units
					incoming ( "ingredients.units",
					"recipeIngredients.unit" ) fields {
						string name leading unique {
							defaultValue ""
						},
						string shortName unique {
							defaultValue ""
							length 5
						},
						text description {
							defaultValue ""
							mandatory false
							length 500
						}
					}
				},
				entity recipeIngredient {
					nameMultiple recipeIngredients
					incoming ( "recipe.ingredients",
					"ingredient.recipes" ) outgoing ( "recipeIngredients.unit" ) fields {
						string amount leading {
							defaultValue ""
							length 20
						},
						integer sortValue {
							defaultValue "1"
						}
					}
				}
			}
			relations {
				many2many bidirectional {
					source category
					sourceAlias categories
					target recipe
					targetAlias recipes
					editType ACTIVE_NONE_PASSIVE_CHOOSE
					refClass RecipeCategoryRef
				},
				many2many bidirectional {
					source category
					sourceAlias categories
					target ingredient
					targetAlias ingredients
					editType ACTIVE_NONE_PASSIVE_CHOOSE
					refClass IngredientCategoryRef
				},
				one2many bidirectional {
					source recipe
					sourceAlias recipe
					target recipeIngredient
					targetAlias ingredients
					cascade REMOVE
					orderBy sortValue
				},
				one2many bidirectional {
					source ingredient
					sourceAlias ingredient
					target recipeIngredient
					targetAlias recipes
					cascade REMOVE
				},
				many2many {
					source ingredient
					sourceAlias ingredients
					target unit
					targetAlias units
					editType ACTIVE_EDIT_PASSIVE_NONE
					refClass IngredientUnit
				},
				many2one {
					source recipe
					sourceAlias recipes
					target ingredient
					targetAlias producedIngredient
				},
				many2one {
					source recipeIngredient
					sourceAlias recipeIngredients
					target unit
					targetAlias unit
					editType ACTIVE_EDIT_PASSIVE_NONE
				}
			}
			variables {
				varContainer General {
					documentation "All basic settings for the recipe manager."
					vars {
						intVar pageSize {
							value "20"
						}
					}
				}
			}
		}
	}
	controllerLayer {
		controllerContainer Controller {
			modelContext ( "RecipeManager.Model" )
			processViews "RecipeManager.View"
			controllers {
				adminController Admin {
					actions {
						mainAction Main,
						viewAction View,
						editAction Edit
					}
				},
				userController User {
					actions {
						mainAction Main,
						viewAction View,
						displayAction Display,
						customAction Report
					}
				},
				ajaxController Ajax {
					actions {
						mainAction Main
					}
				}
			}
		}
	}
	viewLayer {
		viewContainer View {
			controller "RecipeManager.Controller"
		}
	}
}