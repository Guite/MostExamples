application "SimpleTest" {
    documentation "This is a simple test module."
    vendor "Guite"
    author "Axel Guckelsberger"
    email "info@modulestudio.de"
    url "https://modulestudio.de"
    prefix "simtest"
    amountOfExampleRows 5
    entities {
        entity "customer" leading {
            documentation "This text is an example for documentation. It tells you something about the customers section."
            nameMultiple "customers"
            displayPattern "#name#"
            fields {
                string "name" {
                    defaultValue ""
                },
                user "customerUser" {
                    onAccountDeletion ADMIN
                },
                upload "photo" {
                    documentation "You can optionally upload a photo."
                    mandatory false
                },
                datetime "birthDay" {
                    defaultValue ""
                    mandatory false
                    components DATE
                },
                boolean "isSpecialSubscriber" {
                    defaultValue "false"
                    mandatory false
                }
            }
            actions {
                mainAction "Index",
                viewAction "View",
                displayAction "Display",
                editAction "Edit",
                deleteAction "Delete"
            }
        },
        entity "address" {
            nameMultiple "addresses"
            displayPattern "#city#"
            fields {
                string "street" {
                    defaultValue ""
                    mandatory false
                },
                string "city" {
                    defaultValue ""
                },
                email "email" {
                    defaultValue ""
                },
                url "homepage" {
                    documentation "You may input a website address here."
                    defaultValue ""
                    mandatory false
                }
            }
            actions {
                mainAction "Index",
                viewAction "View",
                displayAction "Display",
                editAction "Edit",
                deleteAction "Delete"
            }
        },
        entity "order" {
            nameMultiple "orders"
            displayPattern "#orderNumberUnique#"
            fields {
                string "orderNumberUnique" unique {
                    defaultValue ""
                },
                boolean "isFinished" {
                    defaultValue "false"
                    mandatory false
                }
            }
            actions {
                mainAction "Index",
                viewAction "View",
                displayAction "Display",
                editAction "Edit",
                deleteAction "Delete"
            }
        },
        entity "product" {
            documentation ""
            nameMultiple "products"
            displayPattern "#title#"
            fields {
                string "productNumberUnique" unique {
                    defaultValue ""
                },
                string "title" {
                    defaultValue "This is a default text."
                },
                text "description" {
                    defaultValue ""
                    mandatory false
                },
                upload "image" {
                    mandatory false
                },
                upload "downloadFile" {
                    mandatory false
                    allowedExtensions "zip, rar, pdf"
                },
                number "priceNet" {
                    defaultValue "9.80"
                    mandatory false
                }
            }
            actions {
                mainAction "Index",
                viewAction "View",
                displayAction "Display",
                editAction "Edit",
                deleteAction "Delete"
            }
        }
    }
    relations {
        one2one {
            source "customer"
            sourceAlias "customer"
            target "address"
            targetAlias "address"
        },
        one2many {
            source "customer"
            sourceAlias "customer"
            target "order"
            targetAlias "orders"
        },
        many2many {
            source "order"
            sourceAlias "orders"
            target "product"
            targetAlias "orderProducts"
            refClass "OrderProduct"
        }
    }
}
